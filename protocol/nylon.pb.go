// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: protocol/nylon.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ny struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Ny_RouteOp
	//	*Ny_SeqnoRequestOp
	//	*Ny_ProbeOp
	Type          isNy_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny) Reset() {
	*x = Ny{}
	mi := &file_protocol_nylon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny) ProtoMessage() {}

func (x *Ny) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny.ProtoReflect.Descriptor instead.
func (*Ny) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0}
}

func (x *Ny) GetType() isNy_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Ny) GetRouteOp() *Ny_UpdateBundle {
	if x != nil {
		if x, ok := x.Type.(*Ny_RouteOp); ok {
			return x.RouteOp
		}
	}
	return nil
}

func (x *Ny) GetSeqnoRequestOp() *Ny_Source {
	if x != nil {
		if x, ok := x.Type.(*Ny_SeqnoRequestOp); ok {
			return x.SeqnoRequestOp
		}
	}
	return nil
}

func (x *Ny) GetProbeOp() *Ny_Probe {
	if x != nil {
		if x, ok := x.Type.(*Ny_ProbeOp); ok {
			return x.ProbeOp
		}
	}
	return nil
}

type isNy_Type interface {
	isNy_Type()
}

type Ny_RouteOp struct {
	RouteOp *Ny_UpdateBundle `protobuf:"bytes,1,opt,name=RouteOp,proto3,oneof"`
}

type Ny_SeqnoRequestOp struct {
	SeqnoRequestOp *Ny_Source `protobuf:"bytes,2,opt,name=SeqnoRequestOp,proto3,oneof"`
}

type Ny_ProbeOp struct {
	ProbeOp *Ny_Probe `protobuf:"bytes,3,opt,name=ProbeOp,proto3,oneof"`
}

func (*Ny_RouteOp) isNy_Type() {}

func (*Ny_SeqnoRequestOp) isNy_Type() {}

func (*Ny_ProbeOp) isNy_Type() {}

type Ny_Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        *Ny_Source             `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	Metric        uint32                 `protobuf:"varint,2,opt,name=Metric,proto3" json:"Metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Update) Reset() {
	*x = Ny_Update{}
	mi := &file_protocol_nylon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Update) ProtoMessage() {}

func (x *Ny_Update) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Update.ProtoReflect.Descriptor instead.
func (*Ny_Update) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Ny_Update) GetSource() *Ny_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Ny_Update) GetMetric() uint32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

type Ny_UpdateBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqnoPush     bool                   `protobuf:"varint,1,opt,name=SeqnoPush,proto3" json:"SeqnoPush,omitempty"`
	Updates       []*Ny_Update           `protobuf:"bytes,2,rep,name=Updates,proto3" json:"Updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_UpdateBundle) Reset() {
	*x = Ny_UpdateBundle{}
	mi := &file_protocol_nylon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_UpdateBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_UpdateBundle) ProtoMessage() {}

func (x *Ny_UpdateBundle) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_UpdateBundle.ProtoReflect.Descriptor instead.
func (*Ny_UpdateBundle) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Ny_UpdateBundle) GetSeqnoPush() bool {
	if x != nil {
		return x.SeqnoPush
	}
	return false
}

func (x *Ny_UpdateBundle) GetUpdates() []*Ny_Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

type Ny_Source struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Seqno         uint32                 `protobuf:"varint,2,opt,name=Seqno,proto3" json:"Seqno,omitempty"`
	Sig           []byte                 `protobuf:"bytes,3,opt,name=Sig,proto3" json:"Sig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Source) Reset() {
	*x = Ny_Source{}
	mi := &file_protocol_nylon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Source) ProtoMessage() {}

func (x *Ny_Source) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Source.ProtoReflect.Descriptor instead.
func (*Ny_Source) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Ny_Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ny_Source) GetSeqno() uint32 {
	if x != nil {
		return x.Seqno
	}
	return 0
}

func (x *Ny_Source) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Ny_Probe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         uint64                 `protobuf:"varint,1,opt,name=Token,proto3" json:"Token,omitempty"`
	ResponseToken *uint64                `protobuf:"varint,2,opt,name=ResponseToken,proto3,oneof" json:"ResponseToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ny_Probe) Reset() {
	*x = Ny_Probe{}
	mi := &file_protocol_nylon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ny_Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ny_Probe) ProtoMessage() {}

func (x *Ny_Probe) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_nylon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ny_Probe.ProtoReflect.Descriptor instead.
func (*Ny_Probe) Descriptor() ([]byte, []int) {
	return file_protocol_nylon_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Ny_Probe) GetToken() uint64 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *Ny_Probe) GetResponseToken() uint64 {
	if x != nil && x.ResponseToken != nil {
		return *x.ResponseToken
	}
	return 0
}

var File_protocol_nylon_proto protoreflect.FileDescriptor

var file_protocol_nylon_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x79, 0x6c, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x03,
	0x0a, 0x02, 0x4e, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x53, 0x65, 0x71, 0x6e,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x4f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x00, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x4f,
	0x70, 0x1a, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x1a, 0x58, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x07, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x53, 0x69, 0x67, 0x1a, 0x5a, 0x0a, 0x05, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x5a,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protocol_nylon_proto_rawDescOnce sync.Once
	file_protocol_nylon_proto_rawDescData = file_protocol_nylon_proto_rawDesc
)

func file_protocol_nylon_proto_rawDescGZIP() []byte {
	file_protocol_nylon_proto_rawDescOnce.Do(func() {
		file_protocol_nylon_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_nylon_proto_rawDescData)
	})
	return file_protocol_nylon_proto_rawDescData
}

var file_protocol_nylon_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protocol_nylon_proto_goTypes = []any{
	(*Ny)(nil),              // 0: proto.Ny
	(*Ny_Update)(nil),       // 1: proto.Ny.Update
	(*Ny_UpdateBundle)(nil), // 2: proto.Ny.UpdateBundle
	(*Ny_Source)(nil),       // 3: proto.Ny.Source
	(*Ny_Probe)(nil),        // 4: proto.Ny.Probe
}
var file_protocol_nylon_proto_depIdxs = []int32{
	2, // 0: proto.Ny.RouteOp:type_name -> proto.Ny.UpdateBundle
	3, // 1: proto.Ny.SeqnoRequestOp:type_name -> proto.Ny.Source
	4, // 2: proto.Ny.ProbeOp:type_name -> proto.Ny.Probe
	3, // 3: proto.Ny.Update.Source:type_name -> proto.Ny.Source
	1, // 4: proto.Ny.UpdateBundle.Updates:type_name -> proto.Ny.Update
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_protocol_nylon_proto_init() }
func file_protocol_nylon_proto_init() {
	if File_protocol_nylon_proto != nil {
		return
	}
	file_protocol_nylon_proto_msgTypes[0].OneofWrappers = []any{
		(*Ny_RouteOp)(nil),
		(*Ny_SeqnoRequestOp)(nil),
		(*Ny_ProbeOp)(nil),
	}
	file_protocol_nylon_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_nylon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_nylon_proto_goTypes,
		DependencyIndexes: file_protocol_nylon_proto_depIdxs,
		MessageInfos:      file_protocol_nylon_proto_msgTypes,
	}.Build()
	File_protocol_nylon_proto = out.File
	file_protocol_nylon_proto_rawDesc = nil
	file_protocol_nylon_proto_goTypes = nil
	file_protocol_nylon_proto_depIdxs = nil
}
